@model TestLinux.Grievance
@using AspNetCore.ReCaptcha

@{
    ViewBag.Title = "Add ";
    List<SelectListItem> district = ViewBag.District;
}



<div class="container" style="margin-top:10px;">
    <div class="row">
        <div class="col-lg-6 col-12">
            <h4>Raise new Complaint / greivance</h4>

        </div><!-- col -->

        <div class="col-lg-4 col-12 order-lg-4">

            <a href="/Home/CheckStatus" class="btnrate"> Check Status </a>
        </div><!-- col -->
    </div>
    <b>Form</b>

    @using (Html.BeginForm("AddNew", "Home", FormMethod.Post, new { id = "formComp", autocomplete = "off" , novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()
        @Html.ReCaptcha()
        <div class="form-horizontal">
            <b>@ViewBag.Message</b>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group form-row">
                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control form-control-sm", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(model => model.ApplicantName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApplicantName, new { htmlAttributes = new { @class = "form-control form-control-sm", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.ApplicantName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group form-row">
                <label class="control-label col-md-2">District </label>
                <div class="col-md-10">
                    @Html.DropDownList("District", district, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(model => model.Segment, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group form-row">
                <label class="control-label col-md-2">Branch </label>
                <div class="col-md-10">
                    <select class="form-control form-control-sm" name="Branch" id="Branch"></select>
                    @Html.ValidationMessageFor(model => model.Segment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row">
                <label class="control-label col-md-2">Related To </label>
                <div class="col-md-10">
                    <select name="Segment" id="Segment" class="form-control form-control-sm">
                        <option value="-">Select</option>
                        <option value="D">Digital Transaction</option>
                        <option value="B">BCs &amp; CSPs </option>
                        <option value="G">Others</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Segment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row digi">
                <label class="control-label col-md-2">Transaction Mode </label>
                <div class="col-md-10">
                    <select name="DigitalTxn" class="form-control form-control-sm">
                        <option value="EComm">E-Commerce</option>
                        <option value="POS">POS</option>
                        <option value="AEPS">Adhaar Based</option>
                        <option value="UPI">UPI</option>
                        <option value="ATM">ATM</option>
                        <option value="IMPS">IMPS</option>
                        <option value="NEFT-RTGS">NEFT / RTGS</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.DigitalTxn, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group form-row digi">
                @Html.LabelFor(model => model.AmountInvolved, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AmountInvolved, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.AmountInvolved, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row digi">
                @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(model => model.Complaint, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Complaint, new { @class = "form-control form-control-sm", rows = "5" })
                    @Html.ValidationMessageFor(model => model.Complaint, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row">
                <label class="control-label col-md-6 text-danger">@ViewData["CaptchaMessage"]</label>
                <input type="hidden" name="viewdata" value='@ViewData["_viewdata"]' />


            </div>

            <div class="form-group form-row" style="margin-top:10px;">
                <div class="col-md-2"></div>
                <div class="col-md-offset-2 col-md-10">
                    <input type="hidden" style="margin-bottom:10px;" name="token" value="@ViewData["Captcha"]" />
                    <input class="form-control" type="text" name="captcha" placeholder="Code" required />
                    <img style="margin-top:10px;" src="data:image/jpeg;base64,@Convert.ToBase64String((byte[])ViewData["CaptchaImage"])" />

                </div>
            </div>

            <div class="form-group form-row" style="margin-top:10px;">
                <div class="col-md-2"></div>
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" name="submitButton" >Submit</button>
                </div>
            </div>
        </div>
    }

</div>


@section Scripts {
    <script src="https://unpkg.com/just-validate@latest/dist/just-validate.production.min.js"></script>
    <script type="text/javascript">

        function saveF() {
            $('#formComp').submit();
        }

        $(document).ready(function () {
            const validator = new JustValidate(document.querySelector('#formComp'));

            validator
                .addField(document.querySelector('#MobileNo'), [
                    {
                        rule: 'required',
                    },
                    {
                        rule: 'minLength',
                        value: 10,
                    },
                    {
                        rule: 'maxLength',
                        value: 10,
                    },
                    {
                        rule: 'number',
                        
                    },
                ])
                .addField(document.querySelector('#ApplicantName'), [
                    {
                        rule: 'required',
                    },
                     
                ]).addField(document.querySelector('#Complaint'), [

                    {
                        rule: 'required',
                    },
                    {
                        rule: 'minLength',
                        value: 20,
                    },

                ]);
            validator.onSuccess(function () {
                console.log('Form Success');
                $('#formComp').submit();
            });
            validator.onFail(function () {
                console.log('Form Failed');

            });

        });


        $('#Segment').change(function () {
            //alert($('#Segment option:selected'));
            if ($('#Segment option:selected').val() == 'D') {
                $('.digi').show();
            }
            else {
                $('.digi').hide();
            }
        });
        $('#District').change(function () {
            $.ajax({
                url: "/Home/GetBranch?d=" + $('#District option:selected').val(),

            }).done(function (temp) {

                var $select = $('#Branch');
                $select.find('option').remove();
                $.each(temp, function () {
                    console.log(this);
                    $select.append('<option value=' + this.value + '>' + this.text + '</option>');
                });

            });



        });
        $(document).ready(function () {
            $('.digi').hide();
        });
    </script>
}
