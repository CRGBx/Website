@model TestLinux.Grievance

@{
    ViewBag.Title = "Add ";
    List<SelectListItem> district = ViewBag.District;
}



<div class="container" style="margin-top:10px;">
    <div class="row">
        <div class="col-lg-6 col-12">
            <h4>Raise new Complaint / greivance</h4>

        </div><!-- col -->

        <div class="col-lg-4 col-12 order-lg-4">

            <a href="/Deaf/Dashboard" class="btnrate"> Home </a>
        </div><!-- col -->
    </div>
        
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group form-row">
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.ApplicantName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApplicantName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.ApplicantName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group form-row">
                    <label class="control-label col-md-2">District </label>
                    <div class="col-md-10">
                        @Html.DropDownList("District", district, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(model => model.Segment, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group form-row">
                    <label class="control-label col-md-2">Branch </label>
                    <div class="col-md-10">
                        <select class="form-control form-control-sm" name="Branch" id="Branch"></select>
                        @Html.ValidationMessageFor(model => model.Segment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    <label class="control-label col-md-2">Related To </label>
                    <div class="col-md-10">
                        <select name="Segment" id="Segment" class="form-control form-control-sm">
                            <option value="-">Select</option>
                            <option value="D">Digital Transaction</option>
                            <option value="B">BCs &amp; CSPs </option>
                            <option value="G">Others</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Segment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row digi">
                    <label class="control-label col-md-2">Transaction Mode </label>
                    <div class="col-md-10">
                        <select name="DigitalTxn" class="form-control form-control-sm">
                            <option value="EComm">E-Commerce</option>
                            <option value="POS">POS</option>
                            <option value="AEPS">Adhaar Based</option>
                            <option value="UPI">UPI</option>
                            <option value="ATM">ATM</option>
                            <option value="IMPS">IMPS</option>
                            <option value="NEFT-RTGS">NEFT / RTGS</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.DigitalTxn, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group form-row digi">
                    @Html.LabelFor(model => model.AmountInvolved, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AmountInvolved, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.AmountInvolved, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row digi">
                    @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Complaint, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Complaint, new { @class = "form-control form-control-sm", rows = "5" })
                        @Html.ValidationMessageFor(model => model.Complaint, "", new { @class = "text-danger" })
                    </div>
                </div>

                 <div class="form-group form-row">
                    @Html.LabelFor(model => model.ComplaintChannel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        <input type="text" class="form-control form-control-sm" value="@ViewBag.ComplaintChannel" readonly="readonly" name="ComplaintChannel" />
                        
                        @Html.ValidationMessageFor(model => model.ComplaintChannel, "", new { @class = "text-danger" })
                    </div>
                </div>

                 <div class="form-group form-row">
                    <label class="control-label col-md-2">Complaint Source </label>
                    <div class="col-md-10">
                        <select name="ComplaintType" class="form-control form-control-sm">
                            <option value="Manual">Manual Written Complaint</option>
                            <option value="PMO">PMO Portal</option>
                            <option value="Ombudsman">Ombudsman</option>
                            <option value="SBI">SBI</option>
                            <option value="GOVT">VIP / Govt Departments</option>
                            
                        </select>
                        @Html.ValidationMessageFor(model => model.ComplaintType, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group form-row"  style="margin-top:10px;">
                    <div class="col-md-2"></div>
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary mx-auto" />
                    </div>
                </div>
            </div>
        }

    </div>


    @section Scripts {

        <script type="text/javascript">
            $('#Segment').change(function () {
                //alert($('#Segment option:selected').val());
                if ($('#Segment option:selected').val() == 'D') {
                    $('.digi').show();
                }
                else {
                    $('.digi').hide();
                }
            });
            $('#District').change(function () {
                $.ajax({
                    url: "/Home/GetBranch?d=" + $('#District option:selected').val(),

                }).done(function (temp) {

                    var $select = $('#Branch');
                    $select.find('option').remove();
                    $.each(temp, function () {
                        console.log(this);
                        $select.append('<option value=' + this.value + '>' + this.text + '</option>');
                    });

                });



            });
            $(document).ready(function () {
                $('.digi').hide();
            });
        </script>
    }
